node {
  name: "X"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3730
        }
      }
    }
  }
}
node {
  name: "y_seq"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 1865
        }
      }
    }
  }
}
node {
  name: "y_corr"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 1865
        }
      }
    }
  }
}
node {
  name: "keep_prob/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "keep_prob"
  op: "PlaceholderWithDefault"
  input: "keep_prob/input"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Abs"
  op: "Abs"
  input: "X"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Max"
  op: "Max"
  input: "Abs"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Sign"
  op: "Sign"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "Sign"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Sum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range"
  op: "Range"
  input: "hidden_layer_0/rnn/range/start"
  input: "hidden_layer_0/rnn/Rank"
  input: "hidden_layer_0/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/concat/values_0"
  input: "hidden_layer_0/rnn/range"
  input: "hidden_layer_0/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/transpose"
  op: "Transpose"
  input: "X"
  input: "hidden_layer_0/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/sequence_length"
  op: "Identity"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice"
  op: "StridedSlice"
  input: "hidden_layer_0/rnn/Shape"
  input: "hidden_layer_0/rnn/strided_slice/stack"
  input: "hidden_layer_0/rnn/strided_slice/stack_1"
  input: "hidden_layer_0/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "hidden_layer_0/rnn/strided_slice"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  op: "Fill"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "hidden_layer_0/rnn/strided_slice"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "hidden_layer_0/rnn/strided_slice"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_2"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const_2"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/concat_1"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "hidden_layer_0/rnn/strided_slice"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/sequence_length"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/stack"
  op: "Pack"
  input: "hidden_layer_0/rnn/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Equal"
  op: "Equal"
  input: "hidden_layer_0/rnn/Shape_1"
  input: "hidden_layer_0/rnn/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/All"
  op: "All"
  input: "hidden_layer_0/rnn/Equal"
  input: "hidden_layer_0/rnn/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor hidden_layer_0/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor hidden_layer_0/rnn/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Assert/Assert"
  op: "Assert"
  input: "hidden_layer_0/rnn/All"
  input: "hidden_layer_0/rnn/Assert/Assert/data_0"
  input: "hidden_layer_0/rnn/stack"
  input: "hidden_layer_0/rnn/Assert/Assert/data_2"
  input: "hidden_layer_0/rnn/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "hidden_layer_0/rnn/CheckSeqLen"
  op: "Identity"
  input: "hidden_layer_0/rnn/sequence_length"
  input: "^hidden_layer_0/rnn/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Shape_2"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "hidden_layer_0/rnn/Shape_2"
  input: "hidden_layer_0/rnn/strided_slice_1/stack"
  input: "hidden_layer_0/rnn/strided_slice_1/stack_1"
  input: "hidden_layer_0/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Shape_3"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "hidden_layer_0/rnn/Shape_3"
  input: "hidden_layer_0/rnn/strided_slice_2/stack"
  input: "hidden_layer_0/rnn/strided_slice_2/stack_1"
  input: "hidden_layer_0/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "hidden_layer_0/rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/ExpandDims"
  op: "ExpandDims"
  input: "hidden_layer_0/rnn/strided_slice_2"
  input: "hidden_layer_0/rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat_1"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/ExpandDims"
  input: "hidden_layer_0/rnn/Const_1"
  input: "hidden_layer_0/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/zeros"
  op: "Fill"
  input: "hidden_layer_0/rnn/concat_1"
  input: "hidden_layer_0/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Min"
  op: "Min"
  input: "hidden_layer_0/rnn/CheckSeqLen"
  input: "hidden_layer_0/rnn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Max"
  op: "Max"
  input: "hidden_layer_0/rnn/CheckSeqLen"
  input: "hidden_layer_0/rnn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "hidden_layer_0/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 102
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "hidden_layer_0/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "hidden_layer_0/rnn/strided_slice_1"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3730
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "hidden_layer_0/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/Shape"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/range/start"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/strided_slice"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "hidden_layer_0/rnn/TensorArray_1"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/range"
  input: "hidden_layer_0/rnn/transpose"
  input: "hidden_layer_0/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/transpose"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Maximum"
  op: "Maximum"
  input: "hidden_layer_0/rnn/Maximum/x"
  input: "hidden_layer_0/rnn/Max"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Minimum"
  op: "Minimum"
  input: "hidden_layer_0/rnn/strided_slice_1"
  input: "hidden_layer_0/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/iteration_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/while/iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Enter_1"
  op: "Enter"
  input: "hidden_layer_0/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Enter_2"
  op: "Enter"
  input: "hidden_layer_0/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Enter_3"
  op: "Enter"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Enter_4"
  op: "Enter"
  input: "hidden_layer_0/rnn/DropoutWrapperZeroState/LSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Merge"
  op: "Merge"
  input: "hidden_layer_0/rnn/while/Enter"
  input: "hidden_layer_0/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Merge_1"
  op: "Merge"
  input: "hidden_layer_0/rnn/while/Enter_1"
  input: "hidden_layer_0/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Merge_2"
  op: "Merge"
  input: "hidden_layer_0/rnn/while/Enter_2"
  input: "hidden_layer_0/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Merge_3"
  op: "Merge"
  input: "hidden_layer_0/rnn/while/Enter_3"
  input: "hidden_layer_0/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Merge_4"
  op: "Merge"
  input: "hidden_layer_0/rnn/while/Enter_4"
  input: "hidden_layer_0/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Less"
  op: "Less"
  input: "hidden_layer_0/rnn/while/Merge"
  input: "hidden_layer_0/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Less/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Less_1"
  op: "Less"
  input: "hidden_layer_0/rnn/while/Merge_1"
  input: "hidden_layer_0/rnn/while/Less_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Less_1/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/LogicalAnd"
  op: "LogicalAnd"
  input: "hidden_layer_0/rnn/while/Less"
  input: "hidden_layer_0/rnn/while/Less_1"
}
node {
  name: "hidden_layer_0/rnn/while/LoopCond"
  op: "LoopCond"
  input: "hidden_layer_0/rnn/while/LogicalAnd"
}
node {
  name: "hidden_layer_0/rnn/while/Switch"
  op: "Switch"
  input: "hidden_layer_0/rnn/while/Merge"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Merge"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Switch_1"
  op: "Switch"
  input: "hidden_layer_0/rnn/while/Merge_1"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Merge_1"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Switch_2"
  op: "Switch"
  input: "hidden_layer_0/rnn/while/Merge_2"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Merge_2"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Switch_3"
  op: "Switch"
  input: "hidden_layer_0/rnn/while/Merge_3"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Merge_3"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Switch_4"
  op: "Switch"
  input: "hidden_layer_0/rnn/while/Merge_4"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Merge_4"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Identity"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Identity_1"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Identity_2"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Identity_3"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Identity_4"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/add/y"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/add"
  op: "AddV2"
  input: "hidden_layer_0/rnn/while/Identity"
  input: "hidden_layer_0/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "hidden_layer_0/rnn/while/TensorArrayReadV3/Enter"
  input: "hidden_layer_0/rnn/while/Identity_1"
  input: "hidden_layer_0/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "hidden_layer_0/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "hidden_layer_0/rnn/while/Identity_1"
  input: "hidden_layer_0/rnn/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\370\016\000\000\230\001\000\000"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03761773928999901
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03761773928999901
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/max"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3832
        }
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/Assign"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/kernel/read"
  op: "Identity"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 408
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/bias/Assign"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "hidden_layer_0/rnn/lstm_cell/bias/read"
  op: "Identity"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/concat/axis"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/concat"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/while/TensorArrayReadV3"
  input: "hidden_layer_0/rnn/while/Identity_4"
  input: "hidden_layer_0/rnn/while/lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/MatMul"
  op: "MatMul"
  input: "hidden_layer_0/rnn/while/lstm_cell/concat"
  input: "hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "hidden_layer_0/rnn/while/lstm_cell/MatMul"
  input: "hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Const"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/split/split_dim"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/split"
  op: "Split"
  input: "hidden_layer_0/rnn/while/lstm_cell/split/split_dim"
  input: "hidden_layer_0/rnn/while/lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/add/y"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/add"
  op: "AddV2"
  input: "hidden_layer_0/rnn/while/lstm_cell/split:2"
  input: "hidden_layer_0/rnn/while/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "hidden_layer_0/rnn/while/lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/mul"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
  input: "hidden_layer_0/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "hidden_layer_0/rnn/while/lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Tanh"
  op: "Tanh"
  input: "hidden_layer_0/rnn/while/lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/mul_1"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/add_1"
  op: "AddV2"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "hidden_layer_0/rnn/while/lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
  op: "Tanh"
  input: "hidden_layer_0/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/sub/x"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/sub"
  op: "Sub"
  input: "hidden_layer_0/rnn/while/sub/x"
  input: "hidden_layer_0/rnn/while/sub/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/sub/Enter"
  op: "Enter"
  input: "keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform/min"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform/max"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "hidden_layer_0/rnn/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/max"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/RandomUniform"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/random_uniform"
  op: "Add"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/mul"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/sub/x"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/sub"
  op: "Sub"
  input: "hidden_layer_0/rnn/while/dropout/sub/x"
  input: "hidden_layer_0/rnn/while/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/truediv/x"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/truediv"
  op: "RealDiv"
  input: "hidden_layer_0/rnn/while/dropout/truediv/x"
  input: "hidden_layer_0/rnn/while/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "hidden_layer_0/rnn/while/dropout/random_uniform"
  input: "hidden_layer_0/rnn/while/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/mul"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  input: "hidden_layer_0/rnn/while/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/Cast"
  op: "Cast"
  input: "hidden_layer_0/rnn/while/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/dropout/mul_1"
  op: "Mul"
  input: "hidden_layer_0/rnn/while/dropout/mul"
  input: "hidden_layer_0/rnn/while/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Select"
  op: "Select"
  input: "hidden_layer_0/rnn/while/GreaterEqual"
  input: "hidden_layer_0/rnn/while/Select/Enter"
  input: "hidden_layer_0/rnn/while/dropout/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Select/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Select_1"
  op: "Select"
  input: "hidden_layer_0/rnn/while/GreaterEqual"
  input: "hidden_layer_0/rnn/while/Identity_3"
  input: "hidden_layer_0/rnn/while/lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/add_1"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Select_2"
  op: "Select"
  input: "hidden_layer_0/rnn/while/GreaterEqual"
  input: "hidden_layer_0/rnn/while/Identity_4"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/mul_2"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "hidden_layer_0/rnn/while/Identity_1"
  input: "hidden_layer_0/rnn/while/Select"
  input: "hidden_layer_0/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/add_1/y"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/add_1"
  op: "AddV2"
  input: "hidden_layer_0/rnn/while/Identity_1"
  input: "hidden_layer_0/rnn/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/NextIteration"
  op: "NextIteration"
  input: "hidden_layer_0/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "hidden_layer_0/rnn/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "hidden_layer_0/rnn/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "hidden_layer_0/rnn/while/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Exit"
  op: "Exit"
  input: "hidden_layer_0/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Exit_1"
  op: "Exit"
  input: "hidden_layer_0/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Exit_2"
  op: "Exit"
  input: "hidden_layer_0/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Exit_3"
  op: "Exit"
  input: "hidden_layer_0/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/while/Exit_4"
  op: "Exit"
  input: "hidden_layer_0/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "hidden_layer_0/rnn/TensorArray"
  input: "hidden_layer_0/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayStack/range"
  op: "Range"
  input: "hidden_layer_0/rnn/TensorArrayStack/range/start"
  input: "hidden_layer_0/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "hidden_layer_0/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "hidden_layer_0/rnn/TensorArray"
  input: "hidden_layer_0/rnn/TensorArrayStack/range"
  input: "hidden_layer_0/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 102
        }
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 102
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/range_1"
  op: "Range"
  input: "hidden_layer_0/rnn/range_1/start"
  input: "hidden_layer_0/rnn/Rank_1"
  input: "hidden_layer_0/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "hidden_layer_0/rnn/concat_2"
  op: "ConcatV2"
  input: "hidden_layer_0/rnn/concat_2/values_0"
  input: "hidden_layer_0/rnn/range_1"
  input: "hidden_layer_0/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "hidden_layer_0/rnn/transpose_1"
  op: "Transpose"
  input: "hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "hidden_layer_0/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "f\000\000\000I\007\000\000"
      }
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02315584197640419
      }
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "output_layer/weights/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal/mul"
  op: "Mul"
  input: "output_layer/weights/Initializer/random_normal/RandomStandardNormal"
  input: "output_layer/weights/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
}
node {
  name: "output_layer/weights/Initializer/random_normal"
  op: "Add"
  input: "output_layer/weights/Initializer/random_normal/mul"
  input: "output_layer/weights/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
}
node {
  name: "output_layer/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 102
        }
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_layer/weights/Assign"
  op: "Assign"
  input: "output_layer/weights"
  input: "output_layer/weights/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_layer/weights/read"
  op: "Identity"
  input: "output_layer/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1865
      }
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02315584197640419
      }
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "output_layer/biases/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal/mul"
  op: "Mul"
  input: "output_layer/biases/Initializer/random_normal/RandomStandardNormal"
  input: "output_layer/biases/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
}
node {
  name: "output_layer/biases/Initializer/random_normal"
  op: "Add"
  input: "output_layer/biases/Initializer/random_normal/mul"
  input: "output_layer/biases/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
}
node {
  name: "output_layer/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "output_layer/biases/Assign"
  op: "Assign"
  input: "output_layer/biases"
  input: "output_layer/biases/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "output_layer/biases/read"
  op: "Identity"
  input: "output_layer/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
}
node {
  name: "output_layer/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_layer/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output_layer/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "output_layer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output_layer/strided_slice"
  op: "StridedSlice"
  input: "output_layer/Shape"
  input: "output_layer/strided_slice/stack"
  input: "output_layer/strided_slice/stack_1"
  input: "output_layer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "output_layer/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377f\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/Reshape"
  op: "Reshape"
  input: "hidden_layer_0/rnn/transpose_1"
  input: "output_layer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_layer/MatMul"
  op: "MatMul"
  input: "output_layer/Reshape"
  input: "output_layer/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/add"
  op: "AddV2"
  input: "output_layer/MatMul"
  input: "output_layer/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Reshape_1/shape/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "output_layer/Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1865
      }
    }
  }
}
node {
  name: "output_layer/Reshape_1/shape"
  op: "Pack"
  input: "output_layer/Reshape_1/shape/0"
  input: "output_layer/strided_slice"
  input: "output_layer/Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/Reshape_1"
  op: "Reshape"
  input: "output_layer/add"
  input: "output_layer/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output_layer/preds"
  op: "Sigmoid"
  input: "output_layer/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_layer/NotEqual"
  op: "NotEqual"
  input: "y_seq"
  input: "output_layer/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "output_layer/Where"
  op: "Where"
  input: "output_layer/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "output_layer/GatherNd"
  op: "GatherNd"
  input: "output_layer/Reshape_1"
  input: "output_layer/Where"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/GatherNd_1"
  op: "GatherNd"
  input: "output_layer/preds"
  input: "output_layer/Where"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/GatherNd_2"
  op: "GatherNd"
  input: "y_corr"
  input: "output_layer/Where"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "output_layer/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "output_layer/GatherNd"
  input: "output_layer/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/Select"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "output_layer/GatherNd"
  input: "output_layer/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/Neg"
  op: "Neg"
  input: "output_layer/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "output_layer/logistic_loss/Neg"
  input: "output_layer/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/mul"
  op: "Mul"
  input: "output_layer/GatherNd"
  input: "output_layer/GatherNd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/sub"
  op: "Sub"
  input: "output_layer/logistic_loss/Select"
  input: "output_layer/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/Exp"
  op: "Exp"
  input: "output_layer/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss/Log1p"
  op: "Log1p"
  input: "output_layer/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss"
  op: "Add"
  input: "output_layer/logistic_loss/sub"
  input: "output_layer/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output_layer/Mean"
  op: "Mean"
  input: "output_layer/logistic_loss"
  input: "output_layer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000I\007\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_1"
  op: "StridedSlice"
  input: "X"
  input: "output_layer/strided_slice_1/stack"
  input: "output_layer/strided_slice_1/stack_1"
  input: "output_layer/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000I\007\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_2"
  op: "StridedSlice"
  input: "X"
  input: "output_layer/strided_slice_2/stack"
  input: "output_layer/strided_slice_2/stack_1"
  input: "output_layer/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/NotEqual_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "output_layer/NotEqual_1"
  op: "NotEqual"
  input: "output_layer/strided_slice_1"
  input: "output_layer/NotEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "output_layer/Where_1"
  op: "Where"
  input: "output_layer/NotEqual_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "output_layer/GatherNd_3"
  op: "GatherNd"
  input: "output_layer/Reshape_1"
  input: "output_layer/Where_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/GatherNd_4"
  op: "GatherNd"
  input: "output_layer/preds"
  input: "output_layer/Where_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/GatherNd_5"
  op: "GatherNd"
  input: "output_layer/strided_slice_2"
  input: "output_layer/Where_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/zeros_like"
  op: "ZerosLike"
  input: "output_layer/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/GreaterEqual"
  op: "GreaterEqual"
  input: "output_layer/GatherNd_3"
  input: "output_layer/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/Select"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "output_layer/GatherNd_3"
  input: "output_layer/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/Neg"
  op: "Neg"
  input: "output_layer/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "output_layer/logistic_loss_1/Neg"
  input: "output_layer/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/mul"
  op: "Mul"
  input: "output_layer/GatherNd_3"
  input: "output_layer/GatherNd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/sub"
  op: "Sub"
  input: "output_layer/logistic_loss_1/Select"
  input: "output_layer/logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/Exp"
  op: "Exp"
  input: "output_layer/logistic_loss_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1/Log1p"
  op: "Log1p"
  input: "output_layer/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/logistic_loss_1"
  op: "Add"
  input: "output_layer/logistic_loss_1/sub"
  input: "output_layer/logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output_layer/Mean_1"
  op: "Mean"
  input: "output_layer/logistic_loss_1"
  input: "output_layer/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "output_layer/mul"
  op: "Mul"
  input: "output_layer/mul/x"
  input: "output_layer/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/add_1"
  op: "AddV2"
  input: "output_layer/Mean"
  input: "output_layer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Abs"
  op: "Abs"
  input: "y_seq"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "output_layer/Max"
  op: "Max"
  input: "output_layer/Abs"
  input: "output_layer/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/Sign"
  op: "Sign"
  input: "output_layer/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "output_layer/Sum"
  op: "Sum"
  input: "output_layer/Sign"
  input: "output_layer/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/Cast"
  op: "Cast"
  input: "output_layer/Sum"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/Cast_1"
  op: "Cast"
  input: "output_layer/Cast"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "output_layer/Sum_1"
  op: "Sum"
  input: "output_layer/Cast_1"
  input: "output_layer/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_3"
  op: "StridedSlice"
  input: "output_layer/preds"
  input: "output_layer/strided_slice_3/stack"
  input: "output_layer/strided_slice_3/stack_1"
  input: "output_layer/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_4"
  op: "StridedSlice"
  input: "output_layer/preds"
  input: "output_layer/strided_slice_4/stack"
  input: "output_layer/strided_slice_4/stack_1"
  input: "output_layer/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/sub"
  op: "Sub"
  input: "output_layer/strided_slice_3"
  input: "output_layer/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Abs_1"
  op: "Abs"
  input: "output_layer/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/Sum_2"
  op: "Sum"
  input: "output_layer/Abs_1"
  input: "output_layer/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/truediv"
  op: "RealDiv"
  input: "output_layer/Sum_2"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/truediv_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1865.0
      }
    }
  }
}
node {
  name: "output_layer/truediv_1"
  op: "RealDiv"
  input: "output_layer/truediv"
  input: "output_layer/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.029999999329447746
      }
    }
  }
}
node {
  name: "output_layer/mul_1"
  op: "Mul"
  input: "output_layer/mul_1/x"
  input: "output_layer/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/add_2"
  op: "AddV2"
  input: "output_layer/add_1"
  input: "output_layer/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_5"
  op: "StridedSlice"
  input: "output_layer/preds"
  input: "output_layer/strided_slice_5/stack"
  input: "output_layer/strided_slice_5/stack_1"
  input: "output_layer/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/strided_slice_6"
  op: "StridedSlice"
  input: "output_layer/preds"
  input: "output_layer/strided_slice_6/stack"
  input: "output_layer/strided_slice_6/stack_1"
  input: "output_layer/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "output_layer/sub_1"
  op: "Sub"
  input: "output_layer/strided_slice_5"
  input: "output_layer/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Square"
  op: "Square"
  input: "output_layer/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "output_layer/Sum_3"
  op: "Sum"
  input: "output_layer/Square"
  input: "output_layer/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "output_layer/truediv_2"
  op: "RealDiv"
  input: "output_layer/Sum_3"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/truediv_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1865.0
      }
    }
  }
}
node {
  name: "output_layer/truediv_3"
  op: "RealDiv"
  input: "output_layer/truediv_2"
  input: "output_layer/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.0
      }
    }
  }
}
node {
  name: "output_layer/mul_2"
  op: "Mul"
  input: "output_layer/mul_2/x"
  input: "output_layer/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output_layer/add_3"
  op: "AddV2"
  input: "output_layer/add_2"
  input: "output_layer/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Fill"
  op: "Fill"
  input: "Optimizer/gradients/Shape"
  input: "Optimizer/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/f_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/f_count_1"
  op: "Enter"
  input: "Optimizer/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/Merge"
  op: "Merge"
  input: "Optimizer/gradients/f_count_1"
  input: "Optimizer/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Switch"
  op: "Switch"
  input: "Optimizer/gradients/Merge"
  input: "hidden_layer_0/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Add/y"
  op: "Const"
  input: "^hidden_layer_0/rnn/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/Add"
  op: "Add"
  input: "Optimizer/gradients/Switch:1"
  input: "Optimizer/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/Add"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/f_count_2"
  op: "Exit"
  input: "Optimizer/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/b_count"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/b_count_1"
  op: "Enter"
  input: "Optimizer/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/Merge_1"
  op: "Merge"
  input: "Optimizer/gradients/b_count_1"
  input: "Optimizer/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "Optimizer/gradients/Merge_1"
  input: "Optimizer/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "Optimizer/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/b_count_2"
  op: "LoopCond"
  input: "Optimizer/gradients/GreaterEqual"
}
node {
  name: "Optimizer/gradients/Switch_1"
  op: "Switch"
  input: "Optimizer/gradients/Merge_1"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/Sub"
  op: "Sub"
  input: "Optimizer/gradients/Switch_1:1"
  input: "Optimizer/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/NextIteration_1"
  op: "NextIteration"
  input: "Optimizer/gradients/Sub"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/b_count_3"
  op: "Exit"
  input: "Optimizer/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/Fill"
}
node {
  name: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/Fill"
  input: "^Optimizer/gradients/output_layer/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/Fill"
  input: "^Optimizer/gradients/output_layer/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency"
}
node {
  name: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency"
  input: "^Optimizer/gradients/output_layer/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency"
  input: "^Optimizer/gradients/output_layer/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_2_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency_1"
  input: "output_layer/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_2_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_3_grad/tuple/control_dependency_1"
  input: "output_layer/mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/mul_2_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_2_grad/Mul_1"
}
node {
  name: "Optimizer/gradients/output_layer/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_2_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_2_grad/Mul"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_2_grad/Mul_1"
  input: "^Optimizer/gradients/output_layer/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_2_grad/Mul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency"
}
node {
  name: "Optimizer/gradients/output_layer/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency"
  input: "^Optimizer/gradients/output_layer/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency"
  input: "^Optimizer/gradients/output_layer/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/Fill"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_1_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency_1"
  input: "output_layer/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_1_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_2_grad/tuple/control_dependency_1"
  input: "output_layer/mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/mul_1_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_1_grad/Mul_1"
}
node {
  name: "Optimizer/gradients/output_layer/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_1_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_1_grad/Mul"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_1_grad/Mul_1"
  input: "^Optimizer/gradients/output_layer/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_1_grad/Mul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Shape"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/mul_2_grad/tuple/control_dependency_1"
  input: "output_layer/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Sum"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Neg"
  op: "Neg"
  input: "output_layer/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Neg"
  input: "output_layer/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv_1"
  input: "output_layer/truediv_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/mul_2_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/mul"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/truediv_3_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_3_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/truediv_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/add_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/output_layer/Mean_grad/Reshape"
  input: "Optimizer/gradients/output_layer/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Prod"
  op: "Prod"
  input: "Optimizer/gradients/output_layer/Mean_grad/Shape_1"
  input: "Optimizer/gradients/output_layer/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Prod_1"
  op: "Prod"
  input: "Optimizer/gradients/output_layer/Mean_grad/Shape_2"
  input: "Optimizer/gradients/output_layer/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/output_layer/Mean_grad/Prod_1"
  input: "Optimizer/gradients/output_layer/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/output_layer/Mean_grad/Prod"
  input: "Optimizer/gradients/output_layer/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/Cast"
  op: "Cast"
  input: "Optimizer/gradients/output_layer/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_grad/truediv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/Mean_grad/Tile"
  input: "Optimizer/gradients/output_layer/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_1_grad/tuple/control_dependency_1"
  input: "output_layer/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_1_grad/tuple/control_dependency_1"
  input: "output_layer/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/mul_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_grad/Mul_1"
}
node {
  name: "Optimizer/gradients/output_layer/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_grad/Mul"
  input: "^Optimizer/gradients/output_layer/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/mul_grad/Mul_1"
  input: "^Optimizer/gradients/output_layer/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Shape"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/mul_1_grad/tuple/control_dependency_1"
  input: "output_layer/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Sum"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Neg"
  op: "Neg"
  input: "output_layer/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Neg"
  input: "output_layer/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv_1"
  input: "output_layer/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/mul_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/mul"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/truediv_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Shape"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/tuple/control_dependency"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Sum"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Neg"
  op: "Neg"
  input: "output_layer/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Neg"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv_1"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/truediv_3_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/mul"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/truediv_2_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_2_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/truediv_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Mean_grad/truediv"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Mean_grad/truediv"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/mul_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Reshape"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Prod"
  op: "Prod"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Shape_1"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Shape_2"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Prod_1"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Prod"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/Cast"
  op: "Cast"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Tile"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/truediv_grad/Shape"
  input: "Optimizer/gradients/output_layer/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/tuple/control_dependency"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_grad/RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_grad/Sum"
  input: "Optimizer/gradients/output_layer/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Neg"
  op: "Neg"
  input: "output_layer/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_grad/Neg"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "Optimizer/gradients/output_layer/truediv_grad/RealDiv_1"
  input: "output_layer/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/truediv_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/truediv_grad/mul"
  input: "Optimizer/gradients/output_layer/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/truediv_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/truediv_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_2_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/Sum_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_3_grad/Shape"
  op: "Shape"
  input: "output_layer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_3_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/output_layer/Sum_3_grad/Reshape"
  input: "Optimizer/gradients/output_layer/Sum_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/add/x"
  input: "output_layer/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/truediv"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Mean_1_grad/truediv"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/truediv_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_2_grad/Shape"
  op: "Shape"
  input: "output_layer/Abs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Sum_2_grad/Tile"
  op: "Tile"
  input: "Optimizer/gradients/output_layer/Sum_2_grad/Reshape"
  input: "Optimizer/gradients/output_layer/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Square_grad/Const"
  op: "Const"
  input: "^Optimizer/gradients/output_layer/Sum_3_grad/Tile"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Square_grad/Mul"
  op: "Mul"
  input: "output_layer/sub_1"
  input: "Optimizer/gradients/output_layer/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Square_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/Sum_3_grad/Tile"
  input: "Optimizer/gradients/output_layer/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "output_layer/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/zeros_like"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "output_layer/GatherNd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "output_layer/GatherNd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "output_layer/GatherNd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "output_layer/GatherNd"
  input: "Optimizer/gradients/output_layer/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Mul_1"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss/Log1p_grad/mul"
  input: "output_layer/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape"
  op: "Shape"
  input: "output_layer/logistic_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape_1"
  op: "Shape"
  input: "output_layer/logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/add/x"
  op: "Const"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/add"
  op: "AddV2"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/add/x"
  input: "output_layer/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Abs_1_grad/Sign"
  op: "Sign"
  input: "output_layer/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Abs_1_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/Sum_2_grad/Tile"
  input: "Optimizer/gradients/output_layer/Abs_1_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Shape"
  op: "Shape"
  input: "output_layer/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Shape_1"
  op: "Shape"
  input: "output_layer/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Shape"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Square_grad/Mul_1"
  input: "Optimizer/gradients/output_layer/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Sum"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/Square_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Neg"
  input: "Optimizer/gradients/output_layer/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/sub_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/sub_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/sub_1_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "output_layer/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss/Exp_grad/mul"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/zeros_like"
  input: "Optimizer/gradients/output_layer/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "output_layer/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/zeros_like"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape"
  op: "Shape"
  input: "output_layer/GatherNd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape_1"
  op: "Shape"
  input: "output_layer/GatherNd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "output_layer/GatherNd_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "output_layer/GatherNd_3"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Mul_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Log1p_grad/mul"
  input: "output_layer/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Shape"
  op: "Shape"
  input: "output_layer/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Shape_1"
  op: "Shape"
  input: "output_layer/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/sub_grad/Shape"
  input: "Optimizer/gradients/output_layer/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Abs_1_grad/mul"
  input: "Optimizer/gradients/output_layer/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/sub_grad/Sum"
  input: "Optimizer/gradients/output_layer/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/Abs_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/sub_grad/Neg"
  input: "Optimizer/gradients/output_layer/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/sub_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/sub_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/sub_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/sub_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_5_grad/Shape"
  op: "Shape"
  input: "output_layer/preds"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_5_grad/Shape"
  input: "output_layer/strided_slice_5/stack"
  input: "output_layer/strided_slice_5/stack_1"
  input: "output_layer/strided_slice_5/stack_2"
  input: "Optimizer/gradients/output_layer/sub_1_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_6_grad/Shape"
  op: "Shape"
  input: "output_layer/preds"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_6_grad/Shape"
  input: "output_layer/strided_slice_6/stack"
  input: "output_layer/strided_slice_6/stack_1"
  input: "output_layer/strided_slice_6/stack_2"
  input: "Optimizer/gradients/output_layer/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "output_layer/logistic_loss_1/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Exp_grad/mul"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "output_layer/logistic_loss_1/GreaterEqual"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/zeros_like"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select_1"
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select_1"
  input: "^Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "output_layer/preds"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_3_grad/Shape"
  input: "output_layer/strided_slice_3/stack"
  input: "output_layer/strided_slice_3/stack_1"
  input: "output_layer/strided_slice_3/stack_2"
  input: "Optimizer/gradients/output_layer/sub_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "output_layer/preds"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_4_grad/Shape"
  input: "output_layer/strided_slice_4/stack"
  input: "output_layer/strided_slice_4/stack_1"
  input: "output_layer/strided_slice_4/stack_2"
  input: "Optimizer/gradients/output_layer/sub_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/AddN"
  op: "AddN"
  input: "Optimizer/gradients/output_layer/strided_slice_5_grad/StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_6_grad/StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_3_grad/StridedSliceGrad"
  input: "Optimizer/gradients/output_layer/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/strided_slice_5_grad/StridedSliceGrad"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/preds_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "output_layer/preds"
  input: "Optimizer/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_1"
  op: "AddN"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss/mul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/GatherNd_grad/Shape"
  op: "Shape"
  input: "output_layer/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/GatherNd_grad/ScatterNd"
  op: "ScatterNd"
  input: "output_layer/Where"
  input: "Optimizer/gradients/AddN_1"
  input: "Optimizer/gradients/output_layer/GatherNd_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_2"
  op: "AddN"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/mul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/GatherNd_3_grad/Shape"
  op: "Shape"
  input: "output_layer/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/GatherNd_3_grad/ScatterNd"
  op: "ScatterNd"
  input: "output_layer/Where_1"
  input: "Optimizer/gradients/AddN_2"
  input: "Optimizer/gradients/output_layer/GatherNd_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_3"
  op: "AddN"
  input: "Optimizer/gradients/output_layer/preds_grad/SigmoidGrad"
  input: "Optimizer/gradients/output_layer/GatherNd_grad/ScatterNd"
  input: "Optimizer/gradients/output_layer/GatherNd_3_grad/ScatterNd"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/preds_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Reshape_1_grad/Shape"
  op: "Shape"
  input: "output_layer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/AddN_3"
  input: "Optimizer/gradients/output_layer/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Shape"
  op: "Shape"
  input: "output_layer/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Shape_1"
  op: "Shape"
  input: "output_layer/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/output_layer/add_grad/Shape"
  input: "Optimizer/gradients/output_layer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Reshape_1_grad/Reshape"
  input: "Optimizer/gradients/output_layer/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/add_grad/Sum"
  input: "Optimizer/gradients/output_layer/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/output_layer/Reshape_1_grad/Reshape"
  input: "Optimizer/gradients/output_layer/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/add_grad/Sum_1"
  input: "Optimizer/gradients/output_layer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/add_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/add_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_grad/Reshape"
  input: "^Optimizer/gradients/output_layer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/add_grad/Reshape_1"
  input: "^Optimizer/gradients/output_layer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency"
  input: "output_layer/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "output_layer/Reshape"
  input: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/output_layer/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/output_layer/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/output_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/output_layer/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/output_layer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/output_layer/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Reshape_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/output_layer/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/output_layer/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "hidden_layer_0/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "Optimizer/gradients/output_layer/Reshape_grad/Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "hidden_layer_0/rnn/TensorArray"
  input: "hidden_layer_0/rnn/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Optimizer/gradients"
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "hidden_layer_0/rnn/while/Exit_2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "hidden_layer_0/rnn/TensorArrayStack/range"
  input: "Optimizer/gradients/hidden_layer_0/rnn/transpose_1_grad/transpose"
  input: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/zeros_like"
  op: "ZerosLike"
  input: "hidden_layer_0/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "hidden_layer_0/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "Optimizer/gradients/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "Optimizer/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_2_grad/b_exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_3_grad/b_exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Exit_4_grad/b_exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/Switch"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/Switch:1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad/b_switch"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/Switch"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/Switch:1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad/b_switch"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/Switch"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/Switch:1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Optimizer/gradients"
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "hidden_layer_0/rnn/while/Identity_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/Enter"
  input: "hidden_layer_0/rnn/while/Identity_3"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/Enter"
  input: "hidden_layer_0/rnn/while/GreaterEqual"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/Enter"
  input: "hidden_layer_0/rnn/while/Identity_4"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/zeros_like/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/zeros_like"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/Cast"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/Cast"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/Enter"
  input: "hidden_layer_0/rnn/while/dropout/Cast"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/Enter"
  input: "hidden_layer_0/rnn/while/dropout/mul"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Mul_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/dropout/truediv"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/Enter"
  input: "hidden_layer_0/rnn/while/dropout/truediv"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_2"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Mul_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_4"
  op: "AddN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/dropout/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/AddN_4"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/Mul/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_5"
  op: "AddN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/AddN_5"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/AddN_5"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/zeros_like/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/Tanh"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_6"
  op: "AddN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/Mul/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape_1"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/Enter_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Shape_1"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Sum_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Tanh_grad/TanhGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/add_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat/Const"
  op: "Const"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/split_grad/concat"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "hidden_layer_0/rnn/lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/lstm_cell/concat"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/Enter"
  input: "hidden_layer_0/rnn/while/lstm_cell/concat"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 408
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Const"
  op: "Const"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Const"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "hidden_layer_0/rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/zeros_like/StackPopV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  op: "StackV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPushV2"
  op: "StackPushV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/Enter"
  input: "hidden_layer_0/rnn/while/TensorArrayReadV3"
  input: "^Optimizer/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2"
  op: "StackPopV2"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  input: "^Optimizer/gradients/Sub"
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/StackPopV2/Enter"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/mod"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ConcatOffset"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ConcatOffset:1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice_1"
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice_1"
  input: "^Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3832
          }
          dim {
            size: 408
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Optimizer/gradients/hidden_layer_0/rnn/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "Optimizer/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/gradients/AddN_7"
  op: "AddN"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/tuple/control_dependency"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Optimizer/gradients/hidden_layer_0/rnn/while/Select_2_grad/Select"
      }
    }
  }
}
node {
  name: "Optimizer/gradients/hidden_layer_0/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "Optimizer/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm/mul"
  input: "Optimizer/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm/Sum"
  input: "Optimizer/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm/ones_like/Shape"
  input: "Optimizer/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm/Greater"
  input: "Optimizer/clip_by_norm/Sum"
  input: "Optimizer/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm/Greater"
  input: "Optimizer/clip_by_norm/Sqrt"
  input: "Optimizer/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/MatMul/Enter_grad/b_acc_3"
  input: "Optimizer/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm/Select_1"
  input: "Optimizer/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm/mul_1"
  input: "Optimizer/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm"
  op: "Identity"
  input: "Optimizer/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_1/mul"
  input: "Optimizer/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_1/Sum"
  input: "Optimizer/clip_by_norm_1/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_1/ones_like/Shape"
  input: "Optimizer/clip_by_norm_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_1/Greater"
  input: "Optimizer/clip_by_norm_1/Sum"
  input: "Optimizer/clip_by_norm_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_1/Greater"
  input: "Optimizer/clip_by_norm_1/Sqrt"
  input: "Optimizer/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/hidden_layer_0/rnn/while/lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  input: "Optimizer/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_1/Select_1"
  input: "Optimizer/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_1/mul_1"
  input: "Optimizer/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_1"
  op: "Identity"
  input: "Optimizer/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_2/mul"
  input: "Optimizer/clip_by_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_2/Sum"
  input: "Optimizer/clip_by_norm_2/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_2/ones_like/Shape"
  input: "Optimizer/clip_by_norm_2/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_2/Greater"
  input: "Optimizer/clip_by_norm_2/Sum"
  input: "Optimizer/clip_by_norm_2/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_2/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_2/Greater"
  input: "Optimizer/clip_by_norm_2/Sqrt"
  input: "Optimizer/clip_by_norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/MatMul_grad/tuple/control_dependency_1"
  input: "Optimizer/clip_by_norm_2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_2/Select_1"
  input: "Optimizer/clip_by_norm_2/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_2/mul_1"
  input: "Optimizer/clip_by_norm_2/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_2"
  op: "Identity"
  input: "Optimizer/clip_by_norm_2/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency_1"
  input: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Sum"
  op: "Sum"
  input: "Optimizer/clip_by_norm_3/mul"
  input: "Optimizer/clip_by_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Greater/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Greater"
  op: "Greater"
  input: "Optimizer/clip_by_norm_3/Sum"
  input: "Optimizer/clip_by_norm_3/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/ones_like"
  op: "Fill"
  input: "Optimizer/clip_by_norm_3/ones_like/Shape"
  input: "Optimizer/clip_by_norm_3/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Select"
  op: "Select"
  input: "Optimizer/clip_by_norm_3/Greater"
  input: "Optimizer/clip_by_norm_3/Sum"
  input: "Optimizer/clip_by_norm_3/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Sqrt"
  op: "Sqrt"
  input: "Optimizer/clip_by_norm_3/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Select_1"
  op: "Select"
  input: "Optimizer/clip_by_norm_3/Greater"
  input: "Optimizer/clip_by_norm_3/Sqrt"
  input: "Optimizer/clip_by_norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/mul_1"
  op: "Mul"
  input: "Optimizer/gradients/output_layer/add_grad/tuple/control_dependency_1"
  input: "Optimizer/clip_by_norm_3/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/Maximum"
  op: "Maximum"
  input: "Optimizer/clip_by_norm_3/Select_1"
  input: "Optimizer/clip_by_norm_3/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3/truediv"
  op: "RealDiv"
  input: "Optimizer/clip_by_norm_3/mul_1"
  input: "Optimizer/clip_by_norm_3/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/clip_by_norm_3"
  op: "Identity"
  input: "Optimizer/clip_by_norm_3/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Optimizer/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Optimizer/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/beta1_power/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/beta1_power/read"
  op: "Identity"
  input: "Optimizer/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Optimizer/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/beta2_power/Assign"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "Optimizer/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/beta2_power/read"
  op: "Identity"
  input: "Optimizer/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\370\016\000\000\230\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3832
        }
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\370\016\000\000\230\001\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3832
        }
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 408
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 408
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 408
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "f\000\000\000I\007\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/output_layer/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/output_layer/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 102
        }
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam/Assign"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam/read"
  op: "Identity"
  input: "Optimizer/output_layer/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "f\000\000\000I\007\000\000"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 102
        }
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "Optimizer/output_layer/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/output_layer/weights/Adam_1/read"
  op: "Identity"
  input: "Optimizer/output_layer/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1865
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/output_layer/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/output_layer/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam/Assign"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam/read"
  op: "Identity"
  input: "Optimizer/output_layer/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1865
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1865
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1/Assign"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/output_layer/biases/Adam_1/read"
  op: "Identity"
  input: "Optimizer/output_layer/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
}
node {
  name: "Optimizer/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0041559236124157906
      }
    }
  }
}
node {
  name: "Optimizer/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Optimizer/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Optimizer/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/beta1_power/read"
  input: "Optimizer/beta2_power/read"
  input: "Optimizer/Adam/learning_rate"
  input: "Optimizer/Adam/beta1"
  input: "Optimizer/Adam/beta2"
  input: "Optimizer/Adam/epsilon"
  input: "Optimizer/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/beta1_power/read"
  input: "Optimizer/beta2_power/read"
  input: "Optimizer/Adam/learning_rate"
  input: "Optimizer/Adam/beta1"
  input: "Optimizer/Adam/beta2"
  input: "Optimizer/Adam/epsilon"
  input: "Optimizer/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/Adam/update_output_layer/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "output_layer/weights"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "Optimizer/beta1_power/read"
  input: "Optimizer/beta2_power/read"
  input: "Optimizer/Adam/learning_rate"
  input: "Optimizer/Adam/beta1"
  input: "Optimizer/Adam/beta2"
  input: "Optimizer/Adam/epsilon"
  input: "Optimizer/clip_by_norm_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/Adam/update_output_layer/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "output_layer/biases"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/beta1_power/read"
  input: "Optimizer/beta2_power/read"
  input: "Optimizer/Adam/learning_rate"
  input: "Optimizer/Adam/beta1"
  input: "Optimizer/Adam/beta2"
  input: "Optimizer/Adam/epsilon"
  input: "Optimizer/clip_by_norm_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Optimizer/Adam/mul"
  op: "Mul"
  input: "Optimizer/beta1_power/read"
  input: "Optimizer/Adam/beta1"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/bias/ApplyAdam"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/biases/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/Adam/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "Optimizer/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Adam/mul_1"
  op: "Mul"
  input: "Optimizer/beta2_power/read"
  input: "Optimizer/Adam/beta2"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/bias/ApplyAdam"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/biases/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/weights/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
}
node {
  name: "Optimizer/Adam/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "Optimizer/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Optimizer/Adam"
  op: "NoOp"
  input: "^Optimizer/Adam/Assign"
  input: "^Optimizer/Adam/Assign_1"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/bias/ApplyAdam"
  input: "^Optimizer/Adam/update_hidden_layer_0/rnn/lstm_cell/kernel/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/biases/ApplyAdam"
  input: "^Optimizer/Adam/update_output_layer/weights/ApplyAdam"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Optimizer/beta1_power/Assign"
  input: "^Optimizer/beta2_power/Assign"
  input: "^Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam/Assign"
  input: "^Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1/Assign"
  input: "^Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam/Assign"
  input: "^Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1/Assign"
  input: "^Optimizer/output_layer/biases/Adam/Assign"
  input: "^Optimizer/output_layer/biases/Adam_1/Assign"
  input: "^Optimizer/output_layer/weights/Adam/Assign"
  input: "^Optimizer/output_layer/weights/Adam_1/Assign"
  input: "^hidden_layer_0/rnn/lstm_cell/bias/Assign"
  input: "^hidden_layer_0/rnn/lstm_cell/kernel/Assign"
  input: "^output_layer/biases/Assign"
  input: "^output_layer/weights/Assign"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_9"
}
node {
  name: "save_2/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_2/filename"
  op: "PlaceholderWithDefault"
  input: "save_2/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/Const"
  op: "PlaceholderWithDefault"
  input: "save_2/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_2/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/SaveV2"
  op: "SaveV2"
  input: "save_2/Const"
  input: "save_2/SaveV2/tensor_names"
  input: "save_2/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/control_dependency"
  op: "Identity"
  input: "save_2/Const"
  input: "^save_2/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_2/Const"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/RestoreV2"
  op: "RestoreV2"
  input: "save_2/Const"
  input: "save_2/RestoreV2/tensor_names"
  input: "save_2/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_2/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_2/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_2/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_2/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_2/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_2/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_2/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_2/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_2/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_2/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_2/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_2/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_2/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_2/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_2/restore_all"
  op: "NoOp"
  input: "^save_2/Assign"
  input: "^save_2/Assign_1"
  input: "^save_2/Assign_10"
  input: "^save_2/Assign_11"
  input: "^save_2/Assign_12"
  input: "^save_2/Assign_13"
  input: "^save_2/Assign_2"
  input: "^save_2/Assign_3"
  input: "^save_2/Assign_4"
  input: "^save_2/Assign_5"
  input: "^save_2/Assign_6"
  input: "^save_2/Assign_7"
  input: "^save_2/Assign_8"
  input: "^save_2/Assign_9"
}
node {
  name: "save_3/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_3/filename"
  op: "PlaceholderWithDefault"
  input: "save_3/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_3/Const"
  op: "PlaceholderWithDefault"
  input: "save_3/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_3/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_3/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/SaveV2"
  op: "SaveV2"
  input: "save_3/Const"
  input: "save_3/SaveV2/tensor_names"
  input: "save_3/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/control_dependency"
  op: "Identity"
  input: "save_3/Const"
  input: "^save_3/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_3/Const"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/RestoreV2"
  op: "RestoreV2"
  input: "save_3/Const"
  input: "save_3/RestoreV2/tensor_names"
  input: "save_3/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_3/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_3/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_3/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_3/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_3/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_3/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_3/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_3/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_3/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_3/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_3/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_3/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_3/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_3/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_3/restore_all"
  op: "NoOp"
  input: "^save_3/Assign"
  input: "^save_3/Assign_1"
  input: "^save_3/Assign_10"
  input: "^save_3/Assign_11"
  input: "^save_3/Assign_12"
  input: "^save_3/Assign_13"
  input: "^save_3/Assign_2"
  input: "^save_3/Assign_3"
  input: "^save_3/Assign_4"
  input: "^save_3/Assign_5"
  input: "^save_3/Assign_6"
  input: "^save_3/Assign_7"
  input: "^save_3/Assign_8"
  input: "^save_3/Assign_9"
}
node {
  name: "save_4/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_4/filename"
  op: "PlaceholderWithDefault"
  input: "save_4/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_4/Const"
  op: "PlaceholderWithDefault"
  input: "save_4/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_4/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_4/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/SaveV2"
  op: "SaveV2"
  input: "save_4/Const"
  input: "save_4/SaveV2/tensor_names"
  input: "save_4/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/control_dependency"
  op: "Identity"
  input: "save_4/Const"
  input: "^save_4/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_4/Const"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/RestoreV2"
  op: "RestoreV2"
  input: "save_4/Const"
  input: "save_4/RestoreV2/tensor_names"
  input: "save_4/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_4/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_4/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_4/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_4/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_4/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_4/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_4/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_4/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_4/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_4/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_4/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_4/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_4/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_4/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_4/restore_all"
  op: "NoOp"
  input: "^save_4/Assign"
  input: "^save_4/Assign_1"
  input: "^save_4/Assign_10"
  input: "^save_4/Assign_11"
  input: "^save_4/Assign_12"
  input: "^save_4/Assign_13"
  input: "^save_4/Assign_2"
  input: "^save_4/Assign_3"
  input: "^save_4/Assign_4"
  input: "^save_4/Assign_5"
  input: "^save_4/Assign_6"
  input: "^save_4/Assign_7"
  input: "^save_4/Assign_8"
  input: "^save_4/Assign_9"
}
node {
  name: "save_5/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_5/filename"
  op: "PlaceholderWithDefault"
  input: "save_5/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_5/Const"
  op: "PlaceholderWithDefault"
  input: "save_5/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_5/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_5/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/SaveV2"
  op: "SaveV2"
  input: "save_5/Const"
  input: "save_5/SaveV2/tensor_names"
  input: "save_5/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/control_dependency"
  op: "Identity"
  input: "save_5/Const"
  input: "^save_5/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_5/Const"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/RestoreV2"
  op: "RestoreV2"
  input: "save_5/Const"
  input: "save_5/RestoreV2/tensor_names"
  input: "save_5/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_5/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_5/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_5/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_5/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_5/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_5/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_5/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_5/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_5/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_5/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_5/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_5/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_5/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_5/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_5/restore_all"
  op: "NoOp"
  input: "^save_5/Assign"
  input: "^save_5/Assign_1"
  input: "^save_5/Assign_10"
  input: "^save_5/Assign_11"
  input: "^save_5/Assign_12"
  input: "^save_5/Assign_13"
  input: "^save_5/Assign_2"
  input: "^save_5/Assign_3"
  input: "^save_5/Assign_4"
  input: "^save_5/Assign_5"
  input: "^save_5/Assign_6"
  input: "^save_5/Assign_7"
  input: "^save_5/Assign_8"
  input: "^save_5/Assign_9"
}
node {
  name: "save_6/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_6/filename"
  op: "PlaceholderWithDefault"
  input: "save_6/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_6/Const"
  op: "PlaceholderWithDefault"
  input: "save_6/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_6/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_6/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/SaveV2"
  op: "SaveV2"
  input: "save_6/Const"
  input: "save_6/SaveV2/tensor_names"
  input: "save_6/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/control_dependency"
  op: "Identity"
  input: "save_6/Const"
  input: "^save_6/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_6/Const"
      }
    }
  }
}
node {
  name: "save_6/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_6/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/RestoreV2"
  op: "RestoreV2"
  input: "save_6/Const"
  input: "save_6/RestoreV2/tensor_names"
  input: "save_6/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_6/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_6/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_6/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_6/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_6/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_6/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_6/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_6/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_6/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_6/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_6/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_6/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_6/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_6/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_6/restore_all"
  op: "NoOp"
  input: "^save_6/Assign"
  input: "^save_6/Assign_1"
  input: "^save_6/Assign_10"
  input: "^save_6/Assign_11"
  input: "^save_6/Assign_12"
  input: "^save_6/Assign_13"
  input: "^save_6/Assign_2"
  input: "^save_6/Assign_3"
  input: "^save_6/Assign_4"
  input: "^save_6/Assign_5"
  input: "^save_6/Assign_6"
  input: "^save_6/Assign_7"
  input: "^save_6/Assign_8"
  input: "^save_6/Assign_9"
}
node {
  name: "save_7/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_7/filename"
  op: "PlaceholderWithDefault"
  input: "save_7/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_7/Const"
  op: "PlaceholderWithDefault"
  input: "save_7/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_7/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_7/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_7/SaveV2"
  op: "SaveV2"
  input: "save_7/Const"
  input: "save_7/SaveV2/tensor_names"
  input: "save_7/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_7/control_dependency"
  op: "Identity"
  input: "save_7/Const"
  input: "^save_7/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_7/Const"
      }
    }
  }
}
node {
  name: "save_7/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_7/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_7/RestoreV2"
  op: "RestoreV2"
  input: "save_7/Const"
  input: "save_7/RestoreV2/tensor_names"
  input: "save_7/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_7/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_7/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_7/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_7/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_7/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_7/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_7/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_7/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_7/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_7/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_7/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_7/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_7/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_7/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_7/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_7/restore_all"
  op: "NoOp"
  input: "^save_7/Assign"
  input: "^save_7/Assign_1"
  input: "^save_7/Assign_10"
  input: "^save_7/Assign_11"
  input: "^save_7/Assign_12"
  input: "^save_7/Assign_13"
  input: "^save_7/Assign_2"
  input: "^save_7/Assign_3"
  input: "^save_7/Assign_4"
  input: "^save_7/Assign_5"
  input: "^save_7/Assign_6"
  input: "^save_7/Assign_7"
  input: "^save_7/Assign_8"
  input: "^save_7/Assign_9"
}
node {
  name: "save_8/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_8/filename"
  op: "PlaceholderWithDefault"
  input: "save_8/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_8/Const"
  op: "PlaceholderWithDefault"
  input: "save_8/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_8/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_8/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_8/SaveV2"
  op: "SaveV2"
  input: "save_8/Const"
  input: "save_8/SaveV2/tensor_names"
  input: "save_8/SaveV2/shape_and_slices"
  input: "Optimizer/beta1_power"
  input: "Optimizer/beta2_power"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "Optimizer/output_layer/biases/Adam"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "Optimizer/output_layer/weights/Adam"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "output_layer/biases"
  input: "output_layer/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_8/control_dependency"
  op: "Identity"
  input: "save_8/Const"
  input: "^save_8/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_8/Const"
      }
    }
  }
}
node {
  name: "save_8/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "Optimizer/beta1_power"
        string_val: "Optimizer/beta2_power"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
        string_val: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
        string_val: "Optimizer/output_layer/biases/Adam"
        string_val: "Optimizer/output_layer/biases/Adam_1"
        string_val: "Optimizer/output_layer/weights/Adam"
        string_val: "Optimizer/output_layer/weights/Adam_1"
        string_val: "hidden_layer_0/rnn/lstm_cell/bias"
        string_val: "hidden_layer_0/rnn/lstm_cell/kernel"
        string_val: "output_layer/biases"
        string_val: "output_layer/weights"
      }
    }
  }
}
node {
  name: "save_8/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_8/RestoreV2"
  op: "RestoreV2"
  input: "save_8/Const"
  input: "save_8/RestoreV2/tensor_names"
  input: "save_8/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_8/Assign"
  op: "Assign"
  input: "Optimizer/beta1_power"
  input: "save_8/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_1"
  op: "Assign"
  input: "Optimizer/beta2_power"
  input: "save_8/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_2"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam"
  input: "save_8/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_3"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/bias/Adam_1"
  input: "save_8/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_4"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam"
  input: "save_8/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_5"
  op: "Assign"
  input: "Optimizer/hidden_layer_0/rnn/lstm_cell/kernel/Adam_1"
  input: "save_8/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_6"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam"
  input: "save_8/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_7"
  op: "Assign"
  input: "Optimizer/output_layer/biases/Adam_1"
  input: "save_8/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_8"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam"
  input: "save_8/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_9"
  op: "Assign"
  input: "Optimizer/output_layer/weights/Adam_1"
  input: "save_8/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_10"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/bias"
  input: "save_8/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_11"
  op: "Assign"
  input: "hidden_layer_0/rnn/lstm_cell/kernel"
  input: "save_8/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@hidden_layer_0/rnn/lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_12"
  op: "Assign"
  input: "output_layer/biases"
  input: "save_8/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/Assign_13"
  op: "Assign"
  input: "output_layer/weights"
  input: "save_8/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@output_layer/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_8/restore_all"
  op: "NoOp"
  input: "^save_8/Assign"
  input: "^save_8/Assign_1"
  input: "^save_8/Assign_10"
  input: "^save_8/Assign_11"
  input: "^save_8/Assign_12"
  input: "^save_8/Assign_13"
  input: "^save_8/Assign_2"
  input: "^save_8/Assign_3"
  input: "^save_8/Assign_4"
  input: "^save_8/Assign_5"
  input: "^save_8/Assign_6"
  input: "^save_8/Assign_7"
  input: "^save_8/Assign_8"
  input: "^save_8/Assign_9"
}
versions {
  producer: 134
}
